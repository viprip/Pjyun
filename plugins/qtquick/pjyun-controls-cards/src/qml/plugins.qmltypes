import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by:
// 'qmlplugindump.exe -nonrelocatable Pjyun.Controls.Cards 1.0'

Module {
    dependencies: []
    Component {
        name: "Task"
        prototype: "QObject"
        exports: ["Pjyun.Controls.Cards/Task 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "title"; type: "string" }
        Property { name: "description"; type: "string" }
        Property { name: "completed"; type: "bool" }
        Property { name: "controller"; type: "TaskController"; isPointer: true }
    }
    Component {
        name: "TaskController"
        prototype: "QObject"
        exports: ["Pjyun.Controls.Cards/TaskController 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "condition"; type: "bool"; isReadonly: true }
        Signal { name: "completed" }
    }
    Component {
        name: "TaskGroup"
        defaultProperty: "tasks"
        prototype: "QObject"
        exports: ["Pjyun.Controls.Cards/TaskGroup 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "tasks"; type: "Task"; isList: true; isReadonly: true }
        Property { name: "empty"; type: "bool"; isReadonly: true }
        Property { name: "count"; type: "int"; isReadonly: true }
        Method {
            name: "add"
            Parameter { name: "task"; type: "Task"; isPointer: true }
        }
        Method {
            name: "insert"
            Parameter { name: "index"; type: "int" }
            Parameter { name: "task"; type: "Task"; isPointer: true }
        }
        Method {
            name: "removeAt"
            Parameter { name: "index"; type: "int" }
        }
        Method {
            name: "takeAt"
            type: "Task*"
            Parameter { name: "index"; type: "int" }
        }
        Method {
            name: "at"
            type: "Task*"
            Parameter { name: "index"; type: "int" }
        }
        Method { name: "clear" }
    }
}

